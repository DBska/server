// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ProposalEditors.proto

#ifndef PROTOBUF_ProposalEditors_2eproto__INCLUDED
#define PROTOBUF_ProposalEditors_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_ProposalEditors_2eproto();
void protobuf_AssignDesc_ProposalEditors_2eproto();
void protobuf_ShutdownFile_ProposalEditors_2eproto();

class ProposalEditors;

// ===================================================================

class ProposalEditors : public ::google::protobuf::Message {
 public:
  ProposalEditors();
  virtual ~ProposalEditors();

  ProposalEditors(const ProposalEditors& from);

  inline ProposalEditors& operator=(const ProposalEditors& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ProposalEditors& default_instance();

  void Swap(ProposalEditors* other);

  // implements Message ----------------------------------------------

  ProposalEditors* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProposalEditors& from);
  void MergeFrom(const ProposalEditors& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string author_id = 1;
  inline bool has_author_id() const;
  inline void clear_author_id();
  static const int kAuthorIdFieldNumber = 1;
  inline const ::std::string& author_id() const;
  inline void set_author_id(const ::std::string& value);
  inline void set_author_id(const char* value);
  inline void set_author_id(const char* value, size_t size);
  inline ::std::string* mutable_author_id();
  inline ::std::string* release_author_id();
  inline void set_allocated_author_id(::std::string* author_id);

  // optional bool isPI = 2;
  inline bool has_ispi() const;
  inline void clear_ispi();
  static const int kIsPIFieldNumber = 2;
  inline bool ispi() const;
  inline void set_ispi(bool value);

  // optional string more_info = 3;
  inline bool has_more_info() const;
  inline void clear_more_info();
  static const int kMoreInfoFieldNumber = 3;
  inline const ::std::string& more_info() const;
  inline void set_more_info(const ::std::string& value);
  inline void set_more_info(const char* value);
  inline void set_more_info(const char* value, size_t size);
  inline ::std::string* mutable_more_info();
  inline ::std::string* release_more_info();
  inline void set_allocated_more_info(::std::string* more_info);

  // optional int64 proposal_id = 4;
  inline bool has_proposal_id() const;
  inline void clear_proposal_id();
  static const int kProposalIdFieldNumber = 4;
  inline ::google::protobuf::int64 proposal_id() const;
  inline void set_proposal_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:ProposalEditors)
 private:
  inline void set_has_author_id();
  inline void clear_has_author_id();
  inline void set_has_ispi();
  inline void clear_has_ispi();
  inline void set_has_more_info();
  inline void clear_has_more_info();
  inline void set_has_proposal_id();
  inline void clear_has_proposal_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* author_id_;
  ::std::string* more_info_;
  ::google::protobuf::int64 proposal_id_;
  bool ispi_;
  friend void  protobuf_AddDesc_ProposalEditors_2eproto();
  friend void protobuf_AssignDesc_ProposalEditors_2eproto();
  friend void protobuf_ShutdownFile_ProposalEditors_2eproto();

  void InitAsDefaultInstance();
  static ProposalEditors* default_instance_;
};
// ===================================================================


// ===================================================================

// ProposalEditors

// optional string author_id = 1;
inline bool ProposalEditors::has_author_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ProposalEditors::set_has_author_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ProposalEditors::clear_has_author_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ProposalEditors::clear_author_id() {
  if (author_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_id_->clear();
  }
  clear_has_author_id();
}
inline const ::std::string& ProposalEditors::author_id() const {
  // @@protoc_insertion_point(field_get:ProposalEditors.author_id)
  return *author_id_;
}
inline void ProposalEditors::set_author_id(const ::std::string& value) {
  set_has_author_id();
  if (author_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_id_ = new ::std::string;
  }
  author_id_->assign(value);
  // @@protoc_insertion_point(field_set:ProposalEditors.author_id)
}
inline void ProposalEditors::set_author_id(const char* value) {
  set_has_author_id();
  if (author_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_id_ = new ::std::string;
  }
  author_id_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProposalEditors.author_id)
}
inline void ProposalEditors::set_author_id(const char* value, size_t size) {
  set_has_author_id();
  if (author_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_id_ = new ::std::string;
  }
  author_id_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProposalEditors.author_id)
}
inline ::std::string* ProposalEditors::mutable_author_id() {
  set_has_author_id();
  if (author_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    author_id_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProposalEditors.author_id)
  return author_id_;
}
inline ::std::string* ProposalEditors::release_author_id() {
  clear_has_author_id();
  if (author_id_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = author_id_;
    author_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProposalEditors::set_allocated_author_id(::std::string* author_id) {
  if (author_id_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete author_id_;
  }
  if (author_id) {
    set_has_author_id();
    author_id_ = author_id;
  } else {
    clear_has_author_id();
    author_id_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProposalEditors.author_id)
}

// optional bool isPI = 2;
inline bool ProposalEditors::has_ispi() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ProposalEditors::set_has_ispi() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ProposalEditors::clear_has_ispi() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ProposalEditors::clear_ispi() {
  ispi_ = false;
  clear_has_ispi();
}
inline bool ProposalEditors::ispi() const {
  // @@protoc_insertion_point(field_get:ProposalEditors.isPI)
  return ispi_;
}
inline void ProposalEditors::set_ispi(bool value) {
  set_has_ispi();
  ispi_ = value;
  // @@protoc_insertion_point(field_set:ProposalEditors.isPI)
}

// optional string more_info = 3;
inline bool ProposalEditors::has_more_info() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ProposalEditors::set_has_more_info() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ProposalEditors::clear_has_more_info() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ProposalEditors::clear_more_info() {
  if (more_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    more_info_->clear();
  }
  clear_has_more_info();
}
inline const ::std::string& ProposalEditors::more_info() const {
  // @@protoc_insertion_point(field_get:ProposalEditors.more_info)
  return *more_info_;
}
inline void ProposalEditors::set_more_info(const ::std::string& value) {
  set_has_more_info();
  if (more_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    more_info_ = new ::std::string;
  }
  more_info_->assign(value);
  // @@protoc_insertion_point(field_set:ProposalEditors.more_info)
}
inline void ProposalEditors::set_more_info(const char* value) {
  set_has_more_info();
  if (more_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    more_info_ = new ::std::string;
  }
  more_info_->assign(value);
  // @@protoc_insertion_point(field_set_char:ProposalEditors.more_info)
}
inline void ProposalEditors::set_more_info(const char* value, size_t size) {
  set_has_more_info();
  if (more_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    more_info_ = new ::std::string;
  }
  more_info_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:ProposalEditors.more_info)
}
inline ::std::string* ProposalEditors::mutable_more_info() {
  set_has_more_info();
  if (more_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    more_info_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:ProposalEditors.more_info)
  return more_info_;
}
inline ::std::string* ProposalEditors::release_more_info() {
  clear_has_more_info();
  if (more_info_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = more_info_;
    more_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ProposalEditors::set_allocated_more_info(::std::string* more_info) {
  if (more_info_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete more_info_;
  }
  if (more_info) {
    set_has_more_info();
    more_info_ = more_info;
  } else {
    clear_has_more_info();
    more_info_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:ProposalEditors.more_info)
}

// optional int64 proposal_id = 4;
inline bool ProposalEditors::has_proposal_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ProposalEditors::set_has_proposal_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ProposalEditors::clear_has_proposal_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ProposalEditors::clear_proposal_id() {
  proposal_id_ = GOOGLE_LONGLONG(0);
  clear_has_proposal_id();
}
inline ::google::protobuf::int64 ProposalEditors::proposal_id() const {
  // @@protoc_insertion_point(field_get:ProposalEditors.proposal_id)
  return proposal_id_;
}
inline void ProposalEditors::set_proposal_id(::google::protobuf::int64 value) {
  set_has_proposal_id();
  proposal_id_ = value;
  // @@protoc_insertion_point(field_set:ProposalEditors.proposal_id)
}


// @@protoc_insertion_point(namespace_scope)

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_ProposalEditors_2eproto__INCLUDED
