// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Reviews.proto

#ifndef PROTOBUF_Reviews_2eproto__INCLUDED
#define PROTOBUF_Reviews_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace PHT {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Reviews_2eproto();
void protobuf_AssignDesc_Reviews_2eproto();
void protobuf_ShutdownFile_Reviews_2eproto();

class Reviews;

// ===================================================================

class Reviews : public ::google::protobuf::Message {
 public:
  Reviews();
  virtual ~Reviews();

  Reviews(const Reviews& from);

  inline Reviews& operator=(const Reviews& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Reviews& default_instance();

  void Swap(Reviews* other);

  // implements Message ----------------------------------------------

  Reviews* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Reviews& from);
  void MergeFrom(const Reviews& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string grade_rank = 1;
  inline bool has_grade_rank() const;
  inline void clear_grade_rank();
  static const int kGradeRankFieldNumber = 1;
  inline const ::std::string& grade_rank() const;
  inline void set_grade_rank(const ::std::string& value);
  inline void set_grade_rank(const char* value);
  inline void set_grade_rank(const char* value, size_t size);
  inline ::std::string* mutable_grade_rank();
  inline ::std::string* release_grade_rank();
  inline void set_allocated_grade_rank(::std::string* grade_rank);

  // optional int64 proposal_id = 2;
  inline bool has_proposal_id() const;
  inline void clear_proposal_id();
  static const int kProposalIdFieldNumber = 2;
  inline ::google::protobuf::int64 proposal_id() const;
  inline void set_proposal_id(::google::protobuf::int64 value);

  // optional string review_comments = 3;
  inline bool has_review_comments() const;
  inline void clear_review_comments();
  static const int kReviewCommentsFieldNumber = 3;
  inline const ::std::string& review_comments() const;
  inline void set_review_comments(const ::std::string& value);
  inline void set_review_comments(const char* value);
  inline void set_review_comments(const char* value, size_t size);
  inline ::std::string* mutable_review_comments();
  inline ::std::string* release_review_comments();
  inline void set_allocated_review_comments(::std::string* review_comments);

  // optional int64 reviewer_id = 4;
  inline bool has_reviewer_id() const;
  inline void clear_reviewer_id();
  static const int kReviewerIdFieldNumber = 4;
  inline ::google::protobuf::int64 reviewer_id() const;
  inline void set_reviewer_id(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:PHT.Reviews)
 private:
  inline void set_has_grade_rank();
  inline void clear_has_grade_rank();
  inline void set_has_proposal_id();
  inline void clear_has_proposal_id();
  inline void set_has_review_comments();
  inline void clear_has_review_comments();
  inline void set_has_reviewer_id();
  inline void clear_has_reviewer_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* grade_rank_;
  ::google::protobuf::int64 proposal_id_;
  ::std::string* review_comments_;
  ::google::protobuf::int64 reviewer_id_;
  friend void  protobuf_AddDesc_Reviews_2eproto();
  friend void protobuf_AssignDesc_Reviews_2eproto();
  friend void protobuf_ShutdownFile_Reviews_2eproto();

  void InitAsDefaultInstance();
  static Reviews* default_instance_;
};
// ===================================================================


// ===================================================================

// Reviews

// optional string grade_rank = 1;
inline bool Reviews::has_grade_rank() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Reviews::set_has_grade_rank() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Reviews::clear_has_grade_rank() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Reviews::clear_grade_rank() {
  if (grade_rank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_rank_->clear();
  }
  clear_has_grade_rank();
}
inline const ::std::string& Reviews::grade_rank() const {
  // @@protoc_insertion_point(field_get:PHT.Reviews.grade_rank)
  return *grade_rank_;
}
inline void Reviews::set_grade_rank(const ::std::string& value) {
  set_has_grade_rank();
  if (grade_rank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_rank_ = new ::std::string;
  }
  grade_rank_->assign(value);
  // @@protoc_insertion_point(field_set:PHT.Reviews.grade_rank)
}
inline void Reviews::set_grade_rank(const char* value) {
  set_has_grade_rank();
  if (grade_rank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_rank_ = new ::std::string;
  }
  grade_rank_->assign(value);
  // @@protoc_insertion_point(field_set_char:PHT.Reviews.grade_rank)
}
inline void Reviews::set_grade_rank(const char* value, size_t size) {
  set_has_grade_rank();
  if (grade_rank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_rank_ = new ::std::string;
  }
  grade_rank_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PHT.Reviews.grade_rank)
}
inline ::std::string* Reviews::mutable_grade_rank() {
  set_has_grade_rank();
  if (grade_rank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    grade_rank_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PHT.Reviews.grade_rank)
  return grade_rank_;
}
inline ::std::string* Reviews::release_grade_rank() {
  clear_has_grade_rank();
  if (grade_rank_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = grade_rank_;
    grade_rank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Reviews::set_allocated_grade_rank(::std::string* grade_rank) {
  if (grade_rank_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete grade_rank_;
  }
  if (grade_rank) {
    set_has_grade_rank();
    grade_rank_ = grade_rank;
  } else {
    clear_has_grade_rank();
    grade_rank_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PHT.Reviews.grade_rank)
}

// optional int64 proposal_id = 2;
inline bool Reviews::has_proposal_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Reviews::set_has_proposal_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Reviews::clear_has_proposal_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Reviews::clear_proposal_id() {
  proposal_id_ = GOOGLE_LONGLONG(0);
  clear_has_proposal_id();
}
inline ::google::protobuf::int64 Reviews::proposal_id() const {
  // @@protoc_insertion_point(field_get:PHT.Reviews.proposal_id)
  return proposal_id_;
}
inline void Reviews::set_proposal_id(::google::protobuf::int64 value) {
  set_has_proposal_id();
  proposal_id_ = value;
  // @@protoc_insertion_point(field_set:PHT.Reviews.proposal_id)
}

// optional string review_comments = 3;
inline bool Reviews::has_review_comments() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Reviews::set_has_review_comments() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Reviews::clear_has_review_comments() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Reviews::clear_review_comments() {
  if (review_comments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    review_comments_->clear();
  }
  clear_has_review_comments();
}
inline const ::std::string& Reviews::review_comments() const {
  // @@protoc_insertion_point(field_get:PHT.Reviews.review_comments)
  return *review_comments_;
}
inline void Reviews::set_review_comments(const ::std::string& value) {
  set_has_review_comments();
  if (review_comments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    review_comments_ = new ::std::string;
  }
  review_comments_->assign(value);
  // @@protoc_insertion_point(field_set:PHT.Reviews.review_comments)
}
inline void Reviews::set_review_comments(const char* value) {
  set_has_review_comments();
  if (review_comments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    review_comments_ = new ::std::string;
  }
  review_comments_->assign(value);
  // @@protoc_insertion_point(field_set_char:PHT.Reviews.review_comments)
}
inline void Reviews::set_review_comments(const char* value, size_t size) {
  set_has_review_comments();
  if (review_comments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    review_comments_ = new ::std::string;
  }
  review_comments_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PHT.Reviews.review_comments)
}
inline ::std::string* Reviews::mutable_review_comments() {
  set_has_review_comments();
  if (review_comments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    review_comments_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:PHT.Reviews.review_comments)
  return review_comments_;
}
inline ::std::string* Reviews::release_review_comments() {
  clear_has_review_comments();
  if (review_comments_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = review_comments_;
    review_comments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void Reviews::set_allocated_review_comments(::std::string* review_comments) {
  if (review_comments_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete review_comments_;
  }
  if (review_comments) {
    set_has_review_comments();
    review_comments_ = review_comments;
  } else {
    clear_has_review_comments();
    review_comments_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:PHT.Reviews.review_comments)
}

// optional int64 reviewer_id = 4;
inline bool Reviews::has_reviewer_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Reviews::set_has_reviewer_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Reviews::clear_has_reviewer_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Reviews::clear_reviewer_id() {
  reviewer_id_ = GOOGLE_LONGLONG(0);
  clear_has_reviewer_id();
}
inline ::google::protobuf::int64 Reviews::reviewer_id() const {
  // @@protoc_insertion_point(field_get:PHT.Reviews.reviewer_id)
  return reviewer_id_;
}
inline void Reviews::set_reviewer_id(::google::protobuf::int64 value) {
  set_has_reviewer_id();
  reviewer_id_ = value;
  // @@protoc_insertion_point(field_set:PHT.Reviews.reviewer_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace PHT

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Reviews_2eproto__INCLUDED
